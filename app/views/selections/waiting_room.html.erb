<body>
<h1> Please wait until your party is here to continue </h1>
<h2> Party Code: <%= params[:access_code] %></h2>

<h3> Joined Users </h3>
<ul id="messages">
  <!-- messages will be displayed here -->
</ul>
<div id="message_content">
</div>

<%= form_with url: "/temp_users/#{params[:id]}/selections", method: :get, data: { turbo: false } do |f| %>
  <%= f.hidden_field :party_id, value: @temp_users[0].party_id %>
  <%= f.hidden_field :movies_arr, value: "#{@movies}" %>
  <%= f.hidden_field :access_code, value: params[:access_code] %>
  <%= f.hidden_field :round, value: 1 %>
  <%= f.submit "Everyone is here" %>
<% end %>
</body>

<script>
      const queryString = window.location.search
      const urlParams = new URLSearchParams(queryString)
      const partyId = urlParams.get('party_id')
      const chatChannel = new WebSocket('ws://localhost:3000/cable');

      chatChannel.onopen = function() {
        chatChannel.send(JSON.stringify({
          command: 'subscribe',
          identifier: JSON.stringify({ channel: 'ChatChannel', room: partyId })
        }));

        sendMessageOnPageLoad();
      };

      chatChannel.onmessage = function(event) {
        const response = JSON.parse(event.data);

        // Filter out ping messages and other non-chat messages
        if (response.type && response.type === "ping") {
          return; // Ignore ping messages
        }

        // Check if the response has a 'message' property
        if (response && response.message) {
          const messagesList = document.getElementById('messages');
          const newMessage = document.createElement('li');

          messagesList.innerHTML = '';
          // Ensure the message content is correctly accessed

          response.message.message.forEach(message => {
            const newMessage = document.createElement('li');
            newMessage.textContent = message;
            messagesList.appendChild(newMessage);
          });
        }
      };

      window.sendMessage = function() {
        const message = document.getElementById('message_content').value;
        chatChannel.send(JSON.stringify({
          command: 'message',
          identifier: JSON.stringify({ channel: 'ChatChannel', room: partyId  }),
          data: JSON.stringify({ action: 'send_message', message: message })
        }));
        document.getElementById('message_content').value = '';
      };

      // Function to send a message on page load
      function sendMessageOnPageLoad() {
        // Define the message you want to send on page load
        const initialMessage = "Hello, world!";
        
        // Trigger the sendMessage function with the initial message
        sendMessage(initialMessage);
      }
    </script>

